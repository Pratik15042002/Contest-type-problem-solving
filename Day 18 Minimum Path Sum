						Day 18

Ques64. Minimum Path Sum
Medium
9.5K
123
Companies
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.
Note: You can only move either down or right at any point in time.
 

 

Input: grid = [[1,3,1],[1,5,1],[4,2,1]]
Output: 7
Explanation: Because the path 1 → 3 → 1 → 1 → 1 minimizes the sum.
Example 2:
Input: grid = [[1,2,3],[4,5,6]]
Output: 12
 
Constraints:
•	m == grid.length
•	n == grid[i].length
•	1 <= m, n <= 200
•	0 <= grid[i][j] <= 100

Code-
class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int i,j,m=grid.size(),n=grid[0].size();
        for(j = 1; j < n;j++){
            grid[0][j] += grid[0][j-1];
        }
        for(i = 1; i < m; i++){
            grid[i][0] += grid[i-1][0];
        }
        for(i = 1; i < m; i++){
            for(j = 1; j < n; j++){
                grid[i][j] = min(grid[i-1][j],grid[i][j-1])+grid[i][j];
            }
        }
        return grid[m-1][n-1];
    }
};
--------------------------------------------------------------------------------------------------------------------------------------
Time complexity- O(n*m)
Space complexity -O(1)
-------------------------------------------------------------------------------------------------------------------------------------
 
