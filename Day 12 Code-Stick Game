					Day 12
Code-Stick Game
•	Task
•	Statistics
•	Time limit: 1.00 s
•	Memory limit: 512 MB
Consider a game where two players remove sticks from a heap. The players move alternately, and the player who removes the last stick wins the game.

A set P={p1,p2,…,pk}
determines the allowed moves. For example, if P={1,3,4}, a player may remove 1, 3 or 4 sticks.

Your task is find out for each number of sticks 1,2,…,n if the first player has a winning or losing position.

Input

The first input line has two integers n and k: the number of sticks and moves.

The next line has k integers p1,p2,…,pk that describe the allowed moves. All integers are distinct, and one of them is 1.

Output

Print a string containing n characters: W means a winning position, and L means a losing position.

Constraints
•	1≤n≤106
•  
•  1≤k≤100
•  
•  1≤pi≤n
•	
Example

Input:
10 3
1 3 4

Output:
WLWWWWLWLW
void solve()
{
    ll n,k;
    cin>>n>>k;
    
    vll v(k);
    fl(i,0,k-1)
    cin>>v[i];
    
    vector<int> dp(n+1, 0);
    
    dp[1] = 1;
    
    for(int i=1; i<=n; i++){ 
        for(int j=0; j<k; j++){ 
            int t = i-v[j];
                 
            if(t>=0 && dp[t]==0)
            dp[i] = 1; 
        } 
    }
    
    for(int i=1; i<=n; i++){
        if(dp[i] == 1)
        cout<<'W';
        else
        cout<<'L';
        
    }

cout<<endl;



}

int main()
{   fastIO;

    ll t=1;
//  cin>>t;

    while(t--)
    {   solve();   }
}



















 
